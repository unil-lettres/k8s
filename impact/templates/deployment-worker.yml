apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.worker_name }}
  namespace: {{ .Values.namespace }}
spec:
  selector:
    matchLabels:
      app: {{ .Values.worker_name }}
  template:
    metadata:
      labels:
        app: {{ .Values.worker_name }}
    spec:
      # Avoid pod early termination with worker hpa, should match supervisor stopwaitsecs
      terminationGracePeriodSeconds: 3600
      initContainers:
      - name: wait-for
        image: "ghcr.io/patrickdappollonio/wait-for:latest"
        command:
          - /wait-for
        args:
          - --host="{{ .Values.db_name }}-svc:3306"
          - --host="{{ .Values.app_name }}-svc:80"
          - --timeout=300s
          - --verbose
      containers:
      - name: {{ .Values.worker_name }}
        image: "unillett/impact:{{ .Values.worker_image_tag }}"
        imagePullPolicy: Always
        lifecycle:
          postStart:
            exec:
              command: ["/bin/sh", "-c", "/var/www/impact/k8s-poststart.sh"]
        envFrom:
          - configMapRef:
              name: {{ .Values.app_name }}-cm
        volumeMounts:
        - name: {{ .Values.app_volume_name }}
          mountPath: /var/www/impact/storage/app/public
          subPath: public-uploads
        - name: {{ .Values.app_volume_name }}
          mountPath: /var/www/impact/storage/logs
          subPath: storage-logs
        resources:
          requests:
            memory: "{{ .Values.worker_memory_request }}"
            cpu: "{{ .Values.worker_cpu_request }}"
          limits:
            memory: "{{ .Values.worker_memory_limit }}"
            cpu: "{{ .Values.worker_cpu_limit }}"
      volumes:
      - name: {{ .Values.app_volume_name }}
        persistentVolumeClaim:
          claimName: {{ .Values.app_name }}-pvc
